<?php	/*	KLYCHA WEB TECHNOLOGIES	*/	/*	***************************	*/	/*	Author: Sivkovich Maxim		*/	/*	***************************	*/	/*	Developed: from 2013		*/	/*	***************************	*/		// Settings class	require("BasicHelp.php");class allpagesHelp extends BasicHelp{   		public $dbh;				public $table;		public $id;		public $item;		public $menuPage;				public function __construct($dbh, $id=0)		{			parent::__construct($dbh);			$this->dbh = $dbh;			$this->menuPage =  $this->rs("SELECT * FROM osc_admin_menu WHERE id='$id'",1);		} 				// Get All Langs		public function getAllLangs(){			$q = "				SELECT * FROM [pre]languages WHERE `used` = 0 LIMIT 1000 			";			return $this->rs($q);		}		// Get Available Langs		public function getAvailableLangs(){				$query = "					SELECT L.name, L.alias, M.block, M.id 					FROM [pre]site_languages AS M 					LEFT JOIN [pre]languages AS L ON L.id = M.lang_id 					WHERE 1 $filter_and AND L.alias != '".DEF_LANG."'					ORDER BY M.id					LIMIT 1000				";										return $this->rs($query);		}				// Get Page item		public function getPageItem($tablename, $lpx="", $lang_fields=array())		{			$result = ['cardItem'=>[], 'menuInfo'=>[]];						$query = "				SELECT M.* 				FROM [pre]menu_pages_ref as R 				LEFT JOIN [pre]menu AS M ON M.id = R.menu_id 				WHERE 					R.table_name='$tablename' 				LIMIT 1			";			$result['menuInfo'] = $this->rs($query,1);						$langFields = "";			$lang_prefix = ($lpx ? $lpx."_" : "");						foreach($lang_fields as $field)			{				$langFields .= ", M.".$lang_prefix.$field." as ".$field." ";			}			$rowId = 1;			if(is_array($this->menuPage)){				if($this->menuPage['row_id']){					$rowId = $this->menuPage['row_id'];				}			}						$query = "				SELECT M.* $langFields  				FROM `$tablename` as M 				WHERE 					`id`='$rowId' 				LIMIT 1			";			$result['cardItem'] = $this->rs($query,1);						return $result;		}				// Get Faq item		public function getFaqItem($id)		{			$query = "SELECT M.* FROM [pre]faq as M WHERE `id`='$id' LIMIT 1";			$resultMassive = $this->rs($query);						$result = ($resultMassive ? $resultMassive[0] : array());						return $result;		}			// Get all faq		public function getFAQ($params=array(),$typeCount=false)		{			// Filter params						$filter_and = "";						if(isset($params['filtr']['massive']))			{				foreach($params['filtr']['massive'] as $f_name => $f_value)				{					if($f_value < 0) continue;					$filter_and .= " AND ($f_name='$f_value') ";				}			}						// Filter like						if(isset($params['filtr']['filtr_search_key']) && isset($params['filtr']['filtr_search_field']) && trim($params['filtr']['filtr_search_key']) != "")			{				$search_field = $params['filtr']['filtr_search_field'];				$search_key = $params['filtr']['filtr_search_key'];								$filter_and .= " AND ($search_field LIKE '%$search_key%') ";			}						// Filter sort						$sort_field		= (isset($params['filtr']['sort_filtr']) ? $params['filtr']['sort_filtr'] : "M.id");						$sort_vector	= (isset($params['filtr']['order_filtr']) ? $params['filtr']['order_filtr'] : "");						// Order limits						$limit = (isset($_COOKIE['global_on_page']) ? (int)$_COOKIE['global_on_page'] : GLOBAL_ON_PAGE);						if($limit <= 0) $limit = GLOBAL_ON_PAGE;						$start = (isset($params['start']) ? ($params['start']-1)*$limit : 0);						if(!$typeCount)			{							$query = "SELECT M.id, M.question, M.answer, M.block, M.order_id, M.dateCreate 									FROM [pre]faq as M  												WHERE 1 $filter_and 						ORDER BY $sort_field $sort_vector 						LIMIT $start,$limit";										return $this->rs($query);							}else			{				$query = "SELECT COUNT(*)  									FROM [pre]faq as M  												WHERE 1 $filter_and 												LIMIT 100000";										$result = $this->rs($query);				return $result[0]['COUNT(*)'];			}		}								// Get Faq item		public function getPageAboutItem($id, $lpx="", $lang_fields=array())		{			$langFields = "";			$lang_prefix = ($lpx ? $lpx."_" : "");						foreach($lang_fields as $field)			{				$langFields .= ", M.".$lang_prefix.$field." as ".$field." ";			}						$query = "SELECT M.* $langFields FROM [pre]page_about_items as M WHERE `id`='$id' LIMIT 1";			$resultMassive = $this->rs($query);						$result = ($resultMassive ? $resultMassive[0] : array());						return $result;		}			// Get all faq		public function getPageAboutItems($params=array(),$typeCount=false)		{			// Filter params						$filter_and = "";						if(isset($params['filtr']['massive']))			{				foreach($params['filtr']['massive'] as $f_name => $f_value)				{					if($f_value < 0) continue;					$filter_and .= " AND ($f_name='$f_value') ";				}			}						// Filter like						if(isset($params['filtr']['filtr_search_key']) && isset($params['filtr']['filtr_search_field']) && trim($params['filtr']['filtr_search_key']) != "")			{				$search_field = $params['filtr']['filtr_search_field'];				$search_key = $params['filtr']['filtr_search_key'];								$filter_and .= " AND ($search_field LIKE '%$search_key%') ";			}						// Filter sort						$sort_field		= (isset($params['filtr']['sort_filtr']) ? $params['filtr']['sort_filtr'] : "M.id");						$sort_vector	= (isset($params['filtr']['order_filtr']) ? $params['filtr']['order_filtr'] : "");						// Order limits						$limit = (isset($_COOKIE['global_on_page']) ? (int)$_COOKIE['global_on_page'] : GLOBAL_ON_PAGE);						if($limit <= 0) $limit = GLOBAL_ON_PAGE;						$start = (isset($params['start']) ? ($params['start']-1)*$limit : 0);						if(!$typeCount)			{							$query = "SELECT M.* 									FROM [pre]page_about_items as M  												WHERE 1 $filter_and 						ORDER BY $sort_field $sort_vector 						LIMIT $start,$limit";										return $this->rs($query);							}else			{				$query = "SELECT COUNT(*)  									FROM [pre]page_about_items as M  												WHERE 1 $filter_and 												LIMIT 100000";										$result = $this->rs($query);				return $result[0]['COUNT(*)'];			}		}		public function getPageNewsItem($id, $lpx="", $lang_fields=array())		{			$langFields = "";			$lang_prefix = ($lpx ? $lpx."_" : "");						foreach($lang_fields as $field)			{				$langFields .= ", M.".$lang_prefix.$field." as ".$field." ";			}						$query = "SELECT M.* $langFields FROM [pre]page_news_items as M WHERE `id`='$id' LIMIT 1";			$resultMassive = $this->rs($query);						$result = ($resultMassive ? $resultMassive[0] : array());						return $result;		}			public function getPageNewsItems($params=array(),$typeCount=false)		{			// Filter params						$filter_and = "";						if(isset($params['filtr']['massive']))			{				foreach($params['filtr']['massive'] as $f_name => $f_value)				{					if($f_value < 0) continue;					$filter_and .= " AND ($f_name='$f_value') ";				}			}						// Filter like						if(isset($params['filtr']['filtr_search_key']) && isset($params['filtr']['filtr_search_field']) && trim($params['filtr']['filtr_search_key']) != "")			{				$search_field = $params['filtr']['filtr_search_field'];				$search_key = $params['filtr']['filtr_search_key'];								$filter_and .= " AND ($search_field LIKE '%$search_key%') ";			}						// Filter sort						$sort_field		= (isset($params['filtr']['sort_filtr']) ? $params['filtr']['sort_filtr'] : "M.id");						$sort_vector	= (isset($params['filtr']['order_filtr']) ? $params['filtr']['order_filtr'] : "");						// Order limits						$limit = (isset($_COOKIE['global_on_page']) ? (int)$_COOKIE['global_on_page'] : GLOBAL_ON_PAGE);						if($limit <= 0) $limit = GLOBAL_ON_PAGE;						$start = (isset($params['start']) ? ($params['start']-1)*$limit : 0);						if(!$typeCount)			{							$query = "SELECT M.* 									FROM [pre]page_news_items as M  												WHERE 1 $filter_and 						ORDER BY $sort_field $sort_vector 						LIMIT $start,$limit";										return $this->rs($query);							}else			{				$query = "SELECT COUNT(*)  									FROM [pre]page_news_items as M  												WHERE 1 $filter_and 												LIMIT 100000";										$result = $this->rs($query);				return $result[0]['COUNT(*)'];			}		}			public function getProjectsItems($params=array(),$typeCount=false)		{			// Filter params						$filter_and = "";						if(isset($params['filtr']['massive']))			{				foreach($params['filtr']['massive'] as $f_name => $f_value)				{					if($f_value < 0) continue;					$filter_and .= " AND ($f_name='$f_value') ";				}			}						// Filter like						if(isset($params['filtr']['filtr_search_key']) && isset($params['filtr']['filtr_search_field']) && trim($params['filtr']['filtr_search_key']) != "")			{				$search_field = $params['filtr']['filtr_search_field'];				$search_key = $params['filtr']['filtr_search_key'];								$filter_and .= " AND ($search_field LIKE '%$search_key%') ";			}						// Filter sort						$sort_field		= (isset($params['filtr']['sort_filtr']) ? $params['filtr']['sort_filtr'] : "M.id");						$sort_vector	= (isset($params['filtr']['order_filtr']) ? $params['filtr']['order_filtr'] : "");						// Order limits						$limit = (isset($_COOKIE['global_on_page']) ? (int)$_COOKIE['global_on_page'] : GLOBAL_ON_PAGE);						if($limit <= 0) $limit = GLOBAL_ON_PAGE;						$start = (isset($params['start']) ? ($params['start']-1)*$limit : 0);						if(!$typeCount)			{							$query = "SELECT M.*,						(SELECT name FROM [pre]projects_cats WHERE `id`=M.cat_id LIMIT 1) as catname, 						(SELECT cover FROM [pre]projects_gallery WHERE project_id = M.id LIMIT 1) as cover									FROM [pre]projects as M  												WHERE 1 $filter_and 						ORDER BY $sort_field $sort_vector 						LIMIT $start,$limit";										return $this->rs($query);							}else			{				$query = "SELECT COUNT(*)  									FROM [pre]projects as M  												WHERE 1 $filter_and 												LIMIT 100000";										$result = $this->rs($query);				return $result[0]['COUNT(*)'];			}		}		public function getProjectsAllCatsList($params=array(),$typeCount=false)		{			// Filter params						$filter_and = "";						if(isset($params['filtr']['massive']))			{				foreach($params['filtr']['massive'] as $f_name => $f_value)				{					if($f_value < 0) continue;					$filter_and .= " AND ($f_name='$f_value') ";				}			}						// Filter like						if(isset($params['filtr']['filtr_search_key']) && isset($params['filtr']['filtr_search_field']) && trim($params['filtr']['filtr_search_key']) != "")			{				$search_field = $params['filtr']['filtr_search_field'];				$search_key = $params['filtr']['filtr_search_key'];								$filter_and .= " AND ($search_field LIKE '%$search_key%') ";			}						// Filter sort						$sort_field		= (isset($params['filtr']['sort_filtr']) ? $params['filtr']['sort_filtr'] : "M.id");						$sort_vector	= (isset($params['filtr']['order_filtr']) ? $params['filtr']['order_filtr'] : "");						// Order limits						$limit = (isset($_COOKIE['global_on_page']) ? (int)$_COOKIE['global_on_page'] : GLOBAL_ON_PAGE);						if($limit <= 0) $limit = GLOBAL_ON_PAGE;						$start = (isset($params['start']) ? ($params['start']-1)*$limit : 0);						if(!$typeCount)			{							$query = "SELECT M.*									FROM [pre]projects_cats as M  												WHERE 1 $filter_and 						ORDER BY $sort_field $sort_vector 						LIMIT $start,$limit";										return $this->rs($query);							}else			{				$query = "SELECT COUNT(*)  									FROM [pre]projects_cats as M  												WHERE 1 $filter_and 												LIMIT 100000";										$result = $this->rs($query);				return $result[0]['COUNT(*)'];			}		}		public function getProjectCatItem($id, $lpx="", $lang_fields=array())		{			$langFields = "";			$lang_prefix = ($lpx ? $lpx."_" : "");						foreach($lang_fields as $field)			{				$langFields .= ", M.".$lang_prefix.$field." as `".$field."` ";			}						$query = "SELECT M.* $langFields FROM [pre]projects_cats as M WHERE M.id='$id' LIMIT 1";			$resultMassive = $this->rs($query);						$result = ($resultMassive ? $resultMassive[0] : array());			return $result;		}					public function getProjectsCatsList()		{			$query = "SELECT * FROM [pre]projects_cats WHERE `id`>1";			$resultMassive = $this->rs($query);			return $resultMassive;		}		public function getProjectItem($id, $lpx="", $lang_fields=array())		{			$langFields = "";			$lang_prefix = ($lpx ? $lpx."_" : "");						foreach($lang_fields as $field)			{				$langFields .= ", M.".$lang_prefix.$field." as ".$field." ";			}						$query = "SELECT M.* $langFields, (SELECT cover FROM [pre]projects_gallery WHERE project_id = M.id LIMIT 1) as cover FROM [pre]projects as M WHERE `id`='$id' LIMIT 1";			$resultMassive = $this->rs($query);						$result = ($resultMassive ? $resultMassive[0] : array());			$result['images'] = array();						$query = "SELECT * FROM [pre]projects_gallery WHERE `project_id`=$id LIMIT 100";			$imagesMassive = $this->rs($query);			if($imagesMassive) {				$result['images'] = $imagesMassive;			}									return $result;		}				public function getPagePostItem($id, $lpx="", $lang_fields=array())		{			$langFields = "";			$lang_prefix = ($lpx ? $lpx."_" : "");						foreach($lang_fields as $field)			{				$langFields .= ", M.".$lang_prefix.$field." as ".$field." ";			}						$query = "SELECT M.* $langFields, (SELECT cover FROM osc_posts_gallery WHERE project_id = M.id LIMIT 1) as cover FROM [pre]posts as M WHERE `id`='$id' LIMIT 1";			$resultMassive = $this->rs($query);			$result = ($resultMassive ? $resultMassive[0] : array());			$result['images'] = array();			$query = "SELECT * FROM [pre]posts_gallery WHERE `project_id`=$id LIMIT 100";			$imagesMassive = $this->rs($query);			if($imagesMassive) {				$result['images'] = $imagesMassive;			}							return $result;		}			public function getPagePostsItems($params=array(),$typeCount=false)		{			// Filter params						$filter_and = "";						if(isset($params['filtr']['massive']))			{				foreach($params['filtr']['massive'] as $f_name => $f_value)				{					if($f_value < 0) continue;					$filter_and .= " AND ($f_name='$f_value') ";				}			}						// Filter like						if(isset($params['filtr']['filtr_search_key']) && isset($params['filtr']['filtr_search_field']) && trim($params['filtr']['filtr_search_key']) != "")			{				$search_field = $params['filtr']['filtr_search_field'];				$search_key = $params['filtr']['filtr_search_key'];								$filter_and .= " AND ($search_field LIKE '%$search_key%') ";			}						// Filter sort						$sort_field		= (isset($params['filtr']['sort_filtr']) ? $params['filtr']['sort_filtr'] : "M.id");						$sort_vector	= (isset($params['filtr']['order_filtr']) ? $params['filtr']['order_filtr'] : "");						// Order limits						$limit = (isset($_COOKIE['global_on_page']) ? (int)$_COOKIE['global_on_page'] : GLOBAL_ON_PAGE);						if($limit <= 0) $limit = GLOBAL_ON_PAGE;						$start = (isset($params['start']) ? ($params['start']-1)*$limit : 0);			$limitCond = isset($params['nolimit']) && $params['nolimit'] ? '10000' : "$start,$limit";						if(!$typeCount)			{							$query = "SELECT M.*,				    		(SELECT cover FROM osc_posts_gallery WHERE project_id = M.id LIMIT 1) as cover									FROM [pre]posts as M  												WHERE 1 $filter_and 						ORDER BY $sort_field $sort_vector 						LIMIT $limitCond";										return $this->rs($query);							}else			{				$query = "SELECT COUNT(*)  									FROM [pre]posts as M  												WHERE 1 $filter_and 												LIMIT 100000";										$result = $this->rs($query);				return $result[0]['COUNT(*)'];			}		}				public function getReviews($params=array(),$typeCount=false)		{			// Filter params						$filter_and = "";						if(isset($params['filtr']['massive']))			{				foreach($params['filtr']['massive'] as $f_name => $f_value)				{					if($f_value < 0) continue;					$filter_and .= " AND ($f_name='$f_value') ";				}			}						// Filter like						if(isset($params['filtr']['filtr_search_key']) && isset($params['filtr']['filtr_search_field']) && trim($params['filtr']['filtr_search_key']) != "")			{				$search_field = $params['filtr']['filtr_search_field'];				$search_key = $params['filtr']['filtr_search_key'];								$filter_and .= " AND ($search_field LIKE '%$search_key%') ";			}						// Filter sort						$sort_field		= (isset($params['filtr']['sort_filtr']) ? $params['filtr']['sort_filtr'] : "M.id");						$sort_vector	= (isset($params['filtr']['order_filtr']) ? $params['filtr']['order_filtr'] : "");						// Order limits						$limit = (isset($_COOKIE['global_on_page']) ? (int)$_COOKIE['global_on_page'] : GLOBAL_ON_PAGE);						if($limit <= 0) $limit = GLOBAL_ON_PAGE;						$start = (isset($params['start']) ? ($params['start']-1)*$limit : 0);						if(!$typeCount)			{							$query = "SELECT M.*						FROM [pre]reviews as M  						WHERE 1 $filter_and 						ORDER BY $sort_field $sort_vector 						LIMIT $start,$limit";										return $this->rs($query);							}else			{				$query = "SELECT COUNT(*)  						FROM [pre]reviews as M  						WHERE 1 $filter_and 						LIMIT 100000";										$result = $this->rs($query);				return $result[0]['COUNT(*)'];			}		}			public function getCompanyProfileServices($params=array(),$typeCount=false)		{			// Filter params						$filter_and = "";						if(isset($params['filtr']['massive']))			{				foreach($params['filtr']['massive'] as $f_name => $f_value)				{					if($f_value < 0) continue;					$filter_and .= " AND ($f_name='$f_value') ";				}			}						// Filter like						if(isset($params['filtr']['filtr_search_key']) && isset($params['filtr']['filtr_search_field']) && trim($params['filtr']['filtr_search_key']) != "")			{				$search_field = $params['filtr']['filtr_search_field'];				$search_key = $params['filtr']['filtr_search_key'];								$filter_and .= " AND ($search_field LIKE '%$search_key%') ";			}						// Filter sort						$sort_field		= (isset($params['filtr']['sort_filtr']) ? $params['filtr']['sort_filtr'] : "M.id");						$sort_vector	= (isset($params['filtr']['order_filtr']) ? $params['filtr']['order_filtr'] : "");						// Order limits						$limit = (isset($_COOKIE['global_on_page']) ? (int)$_COOKIE['global_on_page'] : GLOBAL_ON_PAGE);						if($limit <= 0) $limit = GLOBAL_ON_PAGE;						$start = (isset($params['start']) ? ($params['start']-1)*$limit : 0);						if(!$typeCount)			{							$query = "SELECT M.*						FROM [pre]page_about_profile_list as M  						WHERE 1 $filter_and 						ORDER BY $sort_field $sort_vector 						LIMIT $start,$limit";								return $this->rs($query);							}else			{				$query = "SELECT COUNT(*)  						FROM [pre]page_about_profile_list as M  						WHERE 1 $filter_and 						LIMIT 100000";										$result = $this->rs($query);				return $result[0]['COUNT(*)'];			}		}						public function getCompanyProfileServicesItem($id)		{			$lpx = ($lpx ? $lpx."_" : "");			$query = "			SELECT M.*			FROM [pre]page_about_profile_list as M 			WHERE `id`='$id' 			LIMIT 1";			$resultMassive = $this->rs($query);			$result = ($resultMassive ? $resultMassive[0] : array());			return $result;		}		public function getSitemapCategories($params=array(),$typeCount=false)		{			// Filter params						$filter_and = "";						if(isset($params['filtr']['massive']))			{				foreach($params['filtr']['massive'] as $f_name => $f_value)				{					if($f_value < 0) continue;					$filter_and .= " AND ($f_name='$f_value') ";				}			}						// Filter like						if(isset($params['filtr']['filtr_search_key']) && isset($params['filtr']['filtr_search_field']) && trim($params['filtr']['filtr_search_key']) != "")			{				$search_field = $params['filtr']['filtr_search_field'];				$search_key = $params['filtr']['filtr_search_key'];								$filter_and .= " AND ($search_field LIKE '%$search_key%') ";			}						// Filter sort						$sort_field		= (isset($params['filtr']['sort_filtr']) ? $params['filtr']['sort_filtr'] : "M.id");						$sort_vector	= (isset($params['filtr']['order_filtr']) ? $params['filtr']['order_filtr'] : "");						// Order limits						$limit = (isset($_COOKIE['global_on_page']) ? (int)$_COOKIE['global_on_page'] : GLOBAL_ON_PAGE);						if($limit <= 0) $limit = GLOBAL_ON_PAGE;						$start = (isset($params['start']) ? ($params['start']-1)*$limit : 0);						if(!$typeCount)			{							$query = "SELECT M.*						FROM [pre]menu_sitemap as M  						WHERE 1 $filter_and 						ORDER BY $sort_field $sort_vector 						LIMIT $start,$limit";								return $this->rs($query);							}else			{				$query = "SELECT COUNT(*)  						FROM [pre]menu_sitemap as M  						WHERE 1 $filter_and 						LIMIT 100000";										$result = $this->rs($query);				return $result[0]['COUNT(*)'];			}		}						public function getSitemapCategoriesItem($id)		{			$lpx = ($lpx ? $lpx."_" : "");			$query = "			SELECT M.*			FROM [pre]menu_sitemap as M 			WHERE `id`='$id' 			LIMIT 1";			$resultMassive = $this->rs($query);			$result = ($resultMassive ? $resultMassive[0] : array());			if(!empty($result)) {				$id = $result['id'];				$result['menus'] = $this->rs("					SELECT M.id, M.name 					FROM [pre]menu as M					LEFT JOIN [pre]menu_sitemap_relations as MSR on MSR.menu_id = M.id					WHERE MSR.category_id = $id 				");				$result['menus'] = array_column($result['menus'], 'id');			}			return $result;		}				public function getAcceptedMenus() {			return $this->rs("				SELECT M.id, CONCAT(M.name, ' (', M.alias,')') as name 				FROM [pre]menu as M				GROUP BY M.alias				ORDER BY M.name 				LIMIT 100			");		}    	public function __destruct(){}}